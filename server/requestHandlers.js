// Generated by CoffeeScript 1.8.0
(function() {
  var api, fs, listEvents, logEvent, testListEvents, testLogEvent, url, utils;

  testLogEvent = function(response) {
    console.log("Request handler 'testLogEvent' was called.");
    fs.readFile("html/tests/logEvent.html", function(err, data) {
      response.writeHead(200, {
        "Content-Type": "text/html"
      });
      response.write(data);
      response.end();
    });
  };

  testListEvents = function(response) {
    console.log("Request handler 'testListEvents' was called.");
    fs.readFile("html/tests/listEvents.html", function(err, data) {
      response.writeHead(200, {
        "Content-Type": "text/html"
      });
      response.write(data);
      response.end();
    });
  };

  logEvent = function(response, postData) {
    var eventData, success;
    console.log("Request handler 'logEvent' was called.");
    console.log(postData);
    eventData = utils.getEventDataFromPost(postData);
    success = api.addEvent(eventData);
    if (success) {
      response.writeHead(201, {
        "Content-Type": "application/json"
      });
      response.end();
    } else {
      response.writeHead(500, {
        "Content-Type": "application/json"
      });
      response.end();
    }
  };

  listEvents = function(response, request) {
    var callback, parameters;
    console.log("Request handler 'listEvents' was called.");
    parameters = url.parse(request.url, true).query;
    callback = function(response, events) {
      if (events) {
        response.writeHead(201, {
          "Content-Type": "application/json"
        });
        response.write(JSON.stringify(events));
        response.end();
      } else {
        response.writeHead(500, {
          "Content-Type": "application/json"
        });
        response.end();
      }
    };
    api.listEvents(parameters, response, callback);
  };

  utils = require("./utils");

  api = require("./api_client");

  url = require("url");

  fs = require("fs");

  exports.testLogEvent = testLogEvent;

  exports.testListEvents = testListEvents;

  exports.logEvent = logEvent;

  exports.listEvents = listEvents;

}).call(this);

//# sourceMappingURL=requestHandlers.js.map
