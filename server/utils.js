// Generated by CoffeeScript 1.8.0
(function() {
  var eventChecker, getEventDataFromPost, querystring;

  getEventDataFromPost = function(postData) {
    var parsed, related_id, subject_id, time, type, user_id;
    parsed = querystring.parse(postData);
    time = Date.now();
    user_id = parsed.user_id;
    subject_id = parsed.subject_id;
    type = parsed.type;
    related_id = parsed.related_id;
    return {
      time: time,
      user_id: user_id,
      subject_id: subject_id,
      type: type,
      related_id: related_id
    };
  };

  eventChecker = function(event, parameters) {
    var condition, p;
    condition = true;
    for (p in parameters) {
      if (condition) {
        if (parameters.hasOwnProperty(p)) {
          if (parameters[p]) {
            if (p === "start_date") {
              condition = condition && (event["time"] >= parameters[p]);
            } else if (p === "end_date") {
              condition = condition && (event["time"] <= parameters[p]);
            } else if (["user_id", "type", "id", "subject_id", "related_id"].indexOf(p) > -1) {
              condition = condition && event[p] === parameters[p];
            } else {
              condition = false;
              console.log("Warning: Filter was requested for a non-existent field '" + p + "'. Filtering disabled.");
            }
          }
        }
      }
    }
    return condition;
  };

  querystring = require("querystring");

  exports.getEventDataFromPost = getEventDataFromPost;

  exports.eventChecker = eventChecker;

}).call(this);

//# sourceMappingURL=utils.js.map
